{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport localFont from \"next/font/local\";\nimport \"./assets/styles/globals.css\";\nimport Navbar from './components/navbar';\nimport Header from \"./components/header\";\nimport {Nunito_Sans} from \"next/font/google\";\n\nconst geistSans = localFont({\n  src: \"./assets/fonts/GeistVF.woff\",\n  variable: \"--font-geist-sans\",\n  weight: \"100 900\",\n});\nconst geistMono = localFont({\n  src: \"./assets/fonts/GeistMonoVF.woff\",\n  variable: \"--font-geist-mono\",\n  weight: \"100 900\",\n});\nexport const metadata: Metadata = {\n  title: \"Admin Dashboard\",\n  description: \"Generated by Udemig\",\n};\n\nexport const nunito = Nunito_Sans ({\n  subsets: [\"latin\"],\n  variable: \"--nunito\",\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <div className=\"flex min-h-screen\">\n          <Navbar/>\n          <div className=\"flex flex-col w-full\">\n            <Header/>\n            <main className=\"flex-1 bg-[#f5f6fa] p-10 text-4xl\">{children}</main>\n          </div>\n        </div>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;;;;;;;;AAaO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAOe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,yHAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,yHAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEpE,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,qIAAA,CAAA,UAAM;;;;;kCACP,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,qIAAA,CAAA,UAAM;;;;;0CACP,8OAAC;gCAAK,WAAU;0CAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjE"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/components/title/index.tsx"],"sourcesContent":["const Title = ({children}:{children:string}) => {\n  return <h1 className=\"text-3xl font-semibold md:text-4xl \">{children}</h1>\n}\n\nexport default Title;\n"],"names":[],"mappings":";;;;;AAAA,MAAM,QAAQ,CAAC,EAAC,QAAQ,EAAmB;IACzC,qBAAO,8OAAC;QAAG,WAAU;kBAAuC;;;;;;AAC9D;uCAEe"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/utils/api.tsx"],"sourcesContent":["import { Order, Product } from \"@/types\";\n\nexport const getOrders = async (): Promise<Order[]> => {\n    try {\n        const res = await fetch(\"http://localhost:3090/orders\");\n        return res.json();\n    } catch (err) {\n        console.log(err);\n        throw Error(\"Siparişler alınırken bir sorun oluştu\");\n    }\n};\n\nexport const getProducts = async (): Promise<Product[]> => {\n    try {\n        const res = await fetch(\"http://localhost:3090/products\");\n        return res.json();\n    } catch (err) {\n        console.log(err);\n        throw Error(\"Ürün verileri alınırken bir sorun oluştu\");\n    }\n};"],"names":[],"mappings":";;;;AAEO,MAAM,YAAY;IACrB,IAAI;QACA,MAAM,MAAM,MAAM,MAAM;QACxB,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,KAAK;QACV,QAAQ,GAAG,CAAC;QACZ,MAAM,MAAM;IAChB;AACJ;AAEO,MAAM,cAAc;IACvB,IAAI;QACA,MAAM,MAAM,MAAM,MAAM;QACxB,OAAO,IAAI,IAAI;IACnB,EAAE,OAAO,KAAK;QACV,QAAQ,GAAG,CAAC;QACZ,MAAM,MAAM;IAChB;AACJ"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/%28pages%29/products/Card.tsx"],"sourcesContent":["import { Product } from \"@/types\";\nimport Image from \"next/image\";\n\ntype Props = {\n    product:Product,\n}\nconst Card = ({product}:Props) => {\n  return (\n    <div className=\"bg-white rounded-lg p-2 sm:p-4 shadow-lg\" >\n        <div className=\"relative h-[200px]\">\n            <Image fill src={product.images[0]} alt={product.name}\n            className=\"rounded-lg\"/>\n        </div>\n        <h5 className=\"text-xl font-semibold\">{product.name}</h5>\n        <h5 className=\"text-lg\">{product.price}</h5>\n    </div>\n  )\n};\n\nexport default Card\n"],"names":[],"mappings":";;;;AACA;;;AAKA,MAAM,OAAO,CAAC,EAAC,OAAO,EAAO;IAC3B,qBACE,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBAAC,IAAI;oBAAC,KAAK,QAAQ,MAAM,CAAC,EAAE;oBAAE,KAAK,QAAQ,IAAI;oBACrD,WAAU;;;;;;;;;;;0BAEd,8OAAC;gBAAG,WAAU;0BAAyB,QAAQ,IAAI;;;;;;0BACnD,8OAAC;gBAAG,WAAU;0BAAW,QAAQ,KAAK;;;;;;;;;;;;AAG9C;uCAEe"}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/utils/wait.ts"],"sourcesContent":["export const wait = async () => \n    new Promise((resolve) => \nsetTimeout(resolve, 2000));"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,UAChB,IAAI,QAAQ,CAAC,UACjB,WAAW,SAAS"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/%28pages%29/loading.tsx"],"sourcesContent":["const Loading = ({ designs }: { designs?: string }) => {\n    return (\n      <div className={`text-center ${designs}`}>\n        <div role=\"status\">\n          <svg\n            aria-hidden=\"true\"\n            className=\"inline w-8 h-8 text-gray-200 animate-spin  fill-blue-600\"\n            viewBox=\"0 0 100 101\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n              fill=\"currentColor\"\n            />\n            <path\n              d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n              fill=\"currentFill\"\n            />\n          </svg>\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  };\n  \n  export default Loading;"],"names":[],"mappings":";;;;;AAAA,MAAM,UAAU,CAAC,EAAE,OAAO,EAAwB;IAC9C,qBACE,8OAAC;QAAI,WAAW,CAAC,YAAY,EAAE,SAAS;kBACtC,cAAA,8OAAC;YAAI,MAAK;;8BACR,8OAAC;oBACC,eAAY;oBACZ,WAAU;oBACV,SAAQ;oBACR,MAAK;oBACL,OAAM;;sCAEN,8OAAC;4BACC,GAAE;4BACF,MAAK;;;;;;sCAEP,8OAAC;4BACC,GAAE;4BACF,MAAK;;;;;;;;;;;;8BAGT,8OAAC;oBAAK,WAAU;8BAAU;;;;;;;;;;;;;;;;;AAIlC;uCAEe"}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/%28pages%29/products/page.tsx"],"sourcesContent":["import Title from '@/components/title';\nimport { getProducts } from '@/utils/api';\nimport React, { Suspense } from 'react'\nimport Card from './Card';\nimport { wait } from '@/utils/wait';\nimport Loading from '../loading';\n\nconst Products = async () => {\n  \n\n  return (\n    <div>\n      <Title>Ürünler</Title>\n      <Suspense fallback={<Loading/>}>\n        <List/>\n      </Suspense>\n      \n    </div>\n  )\n}\n\nconst List = async () => {\n  const data = await getProducts();\n  await wait();\n\n  return(\n  <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-5 mt-5'>\n    {data.map((product) => (\n      <Card product={product} key={product.id}/>\n    ))}\n    </div>\n  )\n};\n\nexport default Products;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,WAAW;IAGf,qBACE,8OAAC;;0BACC,8OAAC,oIAAA,CAAA,UAAK;0BAAC;;;;;;0BACP,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC,4HAAA,CAAA,UAAO;;;;;0BAC1B,cAAA,8OAAC;;;;;;;;;;;;;;;;AAKT;AAEA,MAAM,OAAO;IACX,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,cAAW,AAAD;IAC7B,MAAM,CAAA,GAAA,oHAAA,CAAA,OAAI,AAAD;IAET,qBACA,8OAAC;QAAI,WAAU;kBACZ,KAAK,GAAG,CAAC,CAAC,wBACT,8OAAC,qIAAA,CAAA,UAAI;gBAAC,SAAS;eAAc,QAAQ,EAAE;;;;;;;;;;AAI7C;uCAEe"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAkBA,SAASE,IAAI,EAAEC,KAAK,GAAE;AAHtB,cAAc;AAdd,SAASH,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAazE,8BAA8B;IAI5BO,SAASC;;;;;;;;;IACTC,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,iCAAoC;QAElD,YAAA;YAAA;YAAA,oCAA4D;gBAC5D,OAAO,KAAA;oBAAMC;oBAAAA,EAAc,IAAIX,mBAAmB;4BAChDY,QAAAA;4BAAAA,GAAY;4BAAA;iCACVC,MAAMZ,UAAUa,QAAQ;sCACxBC,IAAAA,CAAM,CAAA;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACNC,UAAU;;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;oBAAAA;iBAAAA,CAAY;;iBACZC,UAAU;sBACVC,IAAAA,CAAAA,GAAU;gBAAA,CAAE,UAAA;oBAAA,IAAA;oBAAA;iBAAA;;WACd;;KACAC,UAAU;cACRC,IAAAA;YAAAA,GAAYnB,GAAAA;gBACd,OAAA,QAAA;wBAAA;4BACA,KAAA,CAAA,GAAA,2KAAA,CAAA,sBAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA","ignoreList":[0]}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}