{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/utils/api.tsx"],"sourcesContent":["import { Order, Product, Users } from \"@/types\";\n\n\nexport const getOrders = async (): Promise<Order[]> => {\n    try {\n      const res = await fetch(\"http://localhost:3090/orders\");\n      return res.json();\n    } catch (err) {\n      console.log(err);\n      throw Error(\"Siparişler alınırken bir sorun oluştu\");\n    }\n  };\n\n  export const getProducts = async (): Promise<Product[]> => {\n    try {\n      const res = await fetch(\"http://localhost:3090/products?_sort=-id\", {\n        cache: \"no-store\",\n      });\n      return res.json();\n    } catch (err) {\n      console.log(err);\n      throw Error(\"Ürün verileri alınırken bir sorun oluştu\");\n    }\n  };\n  \n\n  export const deleteProduct = async (id: number) => {\n    try {\n      const res = await fetch(`http://localhost:3090/products/${id}`, {\n        method: \"DELETE\",\n      });\n  \n      return res.json();\n    } catch (err) {\n      console.log(err);\n      throw Error(\"Ürünü silerken oluştu\");\n    }\n  };\n  \n  export const createProduct = async (data: Product) => {\n    try {\n      const res = await fetch(`http://localhost:3090/products`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n      });\n  \n      return res.json();\n    } catch (err) {\n      console.log(err);\n      throw Error(\"Ürün eklenirken oluştu\");\n    }\n  };\n  \n  export const getProductById = async (id: string): Promise<Product> => {\n    try {\n      const res = await fetch(`http://localhost:3090/products/${id}`, {\n        cache: \"no-store\",\n      });\n  \n      \n  \n      const contentType = res.headers.get(\"content-type\");\n      if (contentType && contentType.includes(\"application/json\")) {\n        return await res.json();\n      } else {\n        throw Error(\"Geçersiz JSON formatı!\");\n      }\n    } catch (err) {\n      console.error(\"Hata:\", err);\n      throw Error(\"Ürün verileri alınırken bir sorun oluştu!\");\n    }\n  }; \n\n    \n  export const editProduct = async (data:Product) => {\n    try {\n      const res = await fetch(`http://localhost:3090/products/${data.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n      });\n  \n      return res.json();\n    } catch (err) {\n      console.log(err);\n      throw Error(\"Ürün bulunamadı!\");\n    }\n  }; \n\n  export const getUsers = async () : Promise<Users[]>=> {\n    try {\n      const res = await fetch(`http://localhost:3090/users`, {\n        cache: \"no-store\", \n      });\n      \n      return res.json();\n    } catch (err) {\n      console.log(err);\n      throw Error(\"Ürün eklenirken oluştu!\"); \n    }\n  }; \n\n  export const deleteUsers = async (id:string) => {\n    try {\n      const res = await fetch(`http://localhost:3090/users/${id}`, {\n        method: \"DELETE\",\n      });\n      \n      return res.json();\n    } catch (err) {\n      console.log(err);\n      throw Error(\"Ürün silinirken bir sorun oluştu!\"); \n    }\n  }; \n\n  export const getUserById = async (id: string) : Promise<Users> => {\n    try {\n      const res = await fetch(`http://localhost:3090/users/${id}`);\n      return res.json();\n    } catch (err) {\n      throw Error(\"Kullanıcı bulunamadı!\"); \n    }\n  }; \n\n  export const getValues = async () => {\n    const orderData = await getOrders() || [];\n    const userData = await getUsers() || [];\n    const productData = await getProducts() || [];\n\n\n    console.log(orderData);\n    return {\n      totalUser:userData.length * 109,\n      totalOrder: orderData.reduce(\n        (a, b) => a + b.items.reduce((c, d) => c + d.quantity, 0),\n        0\n      ) * 63 ,\n      totalIncome: \n      \"$\" + orderData.reduce(\n        (incomeTotal, order) => \n          incomeTotal + order.items.reduce((itemIncome, item) => itemIncome + (item.price || 0), 0),\n        0\n      ).toFixed(2),\n      productsCount: productData.length *204,\n    };\n  }; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/rasime/Desktop/4_Dashboard/my-app/app/%28pages%29/products/DeleteButton.tsx"],"sourcesContent":["\"use client\";\n\nimport { deleteProduct } from \"@/utils/api\";\nimport { useRouter } from \"next/navigation\";\nimport { toast } from \"react-toastify\";\n\nconst DeleteButton = ({id} : {id:number}) => {\n  const router = useRouter();\n\n    const handleDelete = () => {\n      deleteProduct(id)\n      .then(() => {\n        // sayfayı yenile (ürünler tekrar alınsın)\n        router.refresh();\n\n        //bildirim gönder\n        toast.success(\"Ürün kaldırıldı!!\")\n      });\n    };\n\n\n  return (\n      <button \n      onClick={handleDelete} \n      className=\"py-1 px-3 bg-[#fed44c] hover:bg-[#f99d0d] rounded-lg\">Sil</button>\n  )\n};\n\nexport default DeleteButton;\n "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,eAAe,CAAC,EAAC,EAAE,EAAe;;IACtC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAErB,MAAM,eAAe;QACnB,CAAA,GAAA,uHAAA,CAAA,gBAAa,AAAD,EAAE,IACb,IAAI,CAAC;YACJ,0CAA0C;YAC1C,OAAO,OAAO;YAEd,iBAAiB;YACjB,yKAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAChB;IACF;IAGF,qBACI,6LAAC;QACD,SAAS;QACT,WAAU;kBAAuD;;;;;;AAEvE;GApBM;;QACW,qIAAA,CAAA,YAAS;;;KADpB;uCAsBS"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}